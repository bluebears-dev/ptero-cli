name: Rust

on:
  push:
    tags: '*'
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-amd64:
    runs-on: ubuntu-latest

    steps:
      # Prepare environment
      - uses: actions/checkout@v2

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      # Run checks and tests
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Clean
        uses: actions-rs/cargo@v1
        with:
          command: clean

      - name: Run tests and coverage
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.18.5'
          args: '--workspace --ignore-tests --exclude-files src/log.rs --force-clean'
          out-type: 'Lcov'

      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "lcov.info"
  
      # Build the binary
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --all --release
  
      - name: Strip and rename
        run: |
          strip target/release/ptero_cli
          mv target/release/ptero_cli target/release/ptero_cli_amd64

      # Release if the tag was pushed
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/ptero_cli_amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-windows:
    runs-on: windows-latest

    steps:
      # Prepare environment
      - uses: actions/checkout@v2

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      # Run checks and tests
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Clean
        uses: actions-rs/cargo@v1
        with:
          command: clean      
          
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace
  
      # Build the binary
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --all --release

      # Release if the tag was pushed
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/ptero_cli.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}